#ifndef open_gl_wrapper_h__
#define open_gl_wrapper_h__

#include "GL/glew.h"

namespace DigitalSculpt
{
    class GL
    {
    public:
        static const GLuint UnbindAllVAO; // Value to signify we are unbinding all VAOS.
        static const GLsizei GenerateOneBuffer;
        /******************************************************************************************************************
         * Desc:
         * Method:    unbindActiveVAO
         * Returns:   void
         ****************************************************************************************************************/
        static void unbindActiveVAO(); // unbinds current VAO binding to GPU.

        /******************************************************************************************************************
         * Desc:
         * Method:    drawFilled
         * Returns:   void
         ****************************************************************************************************************/
        static void drawFilled();

        /******************************************************************************************************************
         * Desc:
         * Method:    drawLined
         * Returns:   void
         ****************************************************************************************************************/
        static void drawLined();

        /******************************************************************************************************************
         * Desc:
         * Method:    clearDepthBuffer
         * Returns:   void
         ****************************************************************************************************************/
        static void clearDepthBuffer();

        /******************************************************************************************************************
         * Desc:
         * Method:    set3DRenderingParameters
         * Returns:   void
         ****************************************************************************************************************/
        static void set3DRenderingParameters();

        /******************************************************************************************************************
         * Desc:
         * Method:    printOpenGLEnviromentInfo
         * Returns:   void
         ****************************************************************************************************************/
        static void printOpenGLEnviromentInfo();

        /******************************************************************************************************************
         * Desc:
         * Method:    bindVertexArray
         * Returns:   void
         * Parameter: GLuint id
         ****************************************************************************************************************/
        static void bindVertexArray(GLuint id);

        /******************************************************************************************************************
         * Desc:
         * Method:    bindArrayBuffer
         * Returns:   void
         * Parameter: GLuint id
         ****************************************************************************************************************/
        static void bindArrayBuffer(GLuint id);

        /******************************************************************************************************************
         * Desc:
         * Method:    bindElementArrayBuffer
         * Returns:   void
         * Parameter: GLuint id
         ****************************************************************************************************************/
        static void bindElementArrayBuffer(GLuint id);
    };
}

#endif // open_gl_wrapper_h__
